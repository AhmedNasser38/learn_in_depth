
Interrupt_ATmega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000540  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000005b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800060  00800060  000005b4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005b4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001083  00000000  00000000  00000778  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000085d  00000000  00000000  000017fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ad1  00000000  00000000  00002058  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003a4  00000000  00000000  00002b2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006ee  00000000  00000000  00002ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000895  00000000  00000000  000035be  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00003e53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 23 02 	jmp	0x446	; 0x446 <__vector_1>
   8:	0c 94 4c 02 	jmp	0x498	; 0x498 <__vector_2>
   c:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e4       	ldi	r30, 0x40	; 64
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 36       	cpi	r26, 0x68	; 104
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 c7 00 	call	0x18e	; 0x18e <main>
  8a:	0c 94 9e 02 	jmp	0x53c	; 0x53c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LED0>:
	
    }
}

void LED0 (){
	SetBit(PORTD,PIN5);
  92:	82 b3       	in	r24, 0x12	; 18
  94:	80 62       	ori	r24, 0x20	; 32
  96:	82 bb       	out	0x12, r24	; 18
	Delay_ms(1000);
  98:	85 e3       	ldi	r24, 0x35	; 53
  9a:	92 e8       	ldi	r25, 0x82	; 130
  9c:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
  a0:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
  a4:	06 c0       	rjmp	.+12     	; 0xb2 <LED0+0x20>
  a6:	00 00       	nop
  a8:	01 97       	sbiw	r24, 0x01	; 1
  aa:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
  ae:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
  b2:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <DelayCount>
  b6:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <DelayCount+0x1>
  ba:	00 97       	sbiw	r24, 0x00	; 0
  bc:	a1 f7       	brne	.-24     	; 0xa6 <LED0+0x14>
	Delay_ms(1000);
  be:	85 e3       	ldi	r24, 0x35	; 53
  c0:	92 e8       	ldi	r25, 0x82	; 130
  c2:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
  c6:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
  ca:	06 c0       	rjmp	.+12     	; 0xd8 <LED0+0x46>
  cc:	00 00       	nop
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
  d4:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
  d8:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <DelayCount>
  dc:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <DelayCount+0x1>
  e0:	00 97       	sbiw	r24, 0x00	; 0
  e2:	a1 f7       	brne	.-24     	; 0xcc <LED0+0x3a>
	}
  e4:	08 95       	ret

000000e6 <LED1>:
void LED1 (){
		SetBit(PORTD,PIN6);
  e6:	82 b3       	in	r24, 0x12	; 18
  e8:	80 64       	ori	r24, 0x40	; 64
  ea:	82 bb       	out	0x12, r24	; 18
		Delay_ms(1000);
  ec:	85 e3       	ldi	r24, 0x35	; 53
  ee:	92 e8       	ldi	r25, 0x82	; 130
  f0:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
  f4:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
  f8:	06 c0       	rjmp	.+12     	; 0x106 <LED1+0x20>
  fa:	00 00       	nop
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
 102:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
 106:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <DelayCount>
 10a:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <DelayCount+0x1>
 10e:	00 97       	sbiw	r24, 0x00	; 0
 110:	a1 f7       	brne	.-24     	; 0xfa <LED1+0x14>
		Delay_ms(1000);
 112:	85 e3       	ldi	r24, 0x35	; 53
 114:	92 e8       	ldi	r25, 0x82	; 130
 116:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
 11a:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
 11e:	06 c0       	rjmp	.+12     	; 0x12c <LED1+0x46>
 120:	00 00       	nop
 122:	01 97       	sbiw	r24, 0x01	; 1
 124:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
 128:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
 12c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <DelayCount>
 130:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <DelayCount+0x1>
 134:	00 97       	sbiw	r24, 0x00	; 0
 136:	a1 f7       	brne	.-24     	; 0x120 <LED1+0x3a>
}
 138:	08 95       	ret

0000013a <LED2>:
void LED2 (){
		SetBit(PORTD,PIN7);
 13a:	82 b3       	in	r24, 0x12	; 18
 13c:	80 68       	ori	r24, 0x80	; 128
 13e:	82 bb       	out	0x12, r24	; 18
		Delay_ms(1000);
 140:	85 e3       	ldi	r24, 0x35	; 53
 142:	92 e8       	ldi	r25, 0x82	; 130
 144:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
 148:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
 14c:	06 c0       	rjmp	.+12     	; 0x15a <LED2+0x20>
 14e:	00 00       	nop
 150:	01 97       	sbiw	r24, 0x01	; 1
 152:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
 156:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
 15a:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <DelayCount>
 15e:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <DelayCount+0x1>
 162:	00 97       	sbiw	r24, 0x00	; 0
 164:	a1 f7       	brne	.-24     	; 0x14e <LED2+0x14>
		Delay_ms(1000);
 166:	85 e3       	ldi	r24, 0x35	; 53
 168:	92 e8       	ldi	r25, 0x82	; 130
 16a:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
 16e:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
 172:	06 c0       	rjmp	.+12     	; 0x180 <LED2+0x46>
 174:	00 00       	nop
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <DelayCount+0x1>
 17c:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <DelayCount>
 180:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <DelayCount>
 184:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <DelayCount+0x1>
 188:	00 97       	sbiw	r24, 0x00	; 0
 18a:	a1 f7       	brne	.-24     	; 0x174 <LED2+0x3a>
 18c:	08 95       	ret

0000018e <main>:
void LED1 ();
void LED2 ();

int main(void)
{
	EXT_INT_INIT();
 18e:	0e 94 0b 02 	call	0x416	; 0x416 <EXT_INT_INIT>
	
	DIO_Set_DDR_PIN(PORTD_REG,PIN5,OUTPUT);
 192:	41 e0       	ldi	r20, 0x01	; 1
 194:	65 e0       	ldi	r22, 0x05	; 5
 196:	83 e0       	ldi	r24, 0x03	; 3
 198:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <DIO_Set_DDR_PIN>
	DIO_Set_DDR_PIN(PORTD_REG,PIN6,OUTPUT);
 19c:	41 e0       	ldi	r20, 0x01	; 1
 19e:	66 e0       	ldi	r22, 0x06	; 6
 1a0:	83 e0       	ldi	r24, 0x03	; 3
 1a2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <DIO_Set_DDR_PIN>
	DIO_Set_DDR_PIN(PORTD_REG,PIN7,OUTPUT);
 1a6:	41 e0       	ldi	r20, 0x01	; 1
 1a8:	67 e0       	ldi	r22, 0x07	; 7
 1aa:	83 e0       	ldi	r24, 0x03	; 3
 1ac:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <DIO_Set_DDR_PIN>
    /* Replace with your application code */
    while (1) 
    {
		DIO_Set_PIN(PORTD_REG,PIN5,LOW);
 1b0:	40 e0       	ldi	r20, 0x00	; 0
 1b2:	65 e0       	ldi	r22, 0x05	; 5
 1b4:	83 e0       	ldi	r24, 0x03	; 3
 1b6:	0e 94 6d 01 	call	0x2da	; 0x2da <DIO_Set_PIN>
		DIO_Set_PIN(PORTD_REG,PIN6,LOW);
 1ba:	40 e0       	ldi	r20, 0x00	; 0
 1bc:	66 e0       	ldi	r22, 0x06	; 6
 1be:	83 e0       	ldi	r24, 0x03	; 3
 1c0:	0e 94 6d 01 	call	0x2da	; 0x2da <DIO_Set_PIN>
		DIO_Set_PIN(PORTD_REG,PIN7,LOW);
 1c4:	40 e0       	ldi	r20, 0x00	; 0
 1c6:	67 e0       	ldi	r22, 0x07	; 7
 1c8:	83 e0       	ldi	r24, 0x03	; 3
 1ca:	0e 94 6d 01 	call	0x2da	; 0x2da <DIO_Set_PIN>
		
		INT0_SetCallBack(&LED0);
 1ce:	89 e4       	ldi	r24, 0x49	; 73
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	0e 94 14 02 	call	0x428	; 0x428 <INT0_SetCallBack>
		INT1_SetCallBack(&LED1);
 1d6:	83 e7       	ldi	r24, 0x73	; 115
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	0e 94 19 02 	call	0x432	; 0x432 <INT1_SetCallBack>
		INT2_SetCallBack(&LED2);
 1de:	8d e9       	ldi	r24, 0x9D	; 157
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	0e 94 1e 02 	call	0x43c	; 0x43c <INT2_SetCallBack>
 1e6:	e4 cf       	rjmp	.-56     	; 0x1b0 <main+0x22>

000001e8 <DIO_Set_DDR_PIN>:
		break;
	}
}

void DIO_Set_DDR_PIN(DIO_PORT_ID PORT, DIO_PIN_ID PIN, DIO_Direction DDR) {
	if (PORT <= PORTD_REG && PIN <= PIN7) {
 1e8:	84 30       	cpi	r24, 0x04	; 4
 1ea:	08 f0       	brcs	.+2      	; 0x1ee <DIO_Set_DDR_PIN+0x6>
 1ec:	75 c0       	rjmp	.+234    	; 0x2d8 <DIO_Set_DDR_PIN+0xf0>
 1ee:	68 30       	cpi	r22, 0x08	; 8
 1f0:	08 f0       	brcs	.+2      	; 0x1f4 <DIO_Set_DDR_PIN+0xc>
 1f2:	72 c0       	rjmp	.+228    	; 0x2d8 <DIO_Set_DDR_PIN+0xf0>
		if (DDR == OUTPUT) {
 1f4:	41 30       	cpi	r20, 0x01	; 1
 1f6:	b9 f5       	brne	.+110    	; 0x266 <DIO_Set_DDR_PIN+0x7e>
			switch (PORT) {
 1f8:	81 30       	cpi	r24, 0x01	; 1
 1fa:	91 f0       	breq	.+36     	; 0x220 <DIO_Set_DDR_PIN+0x38>
 1fc:	28 f0       	brcs	.+10     	; 0x208 <DIO_Set_DDR_PIN+0x20>
 1fe:	82 30       	cpi	r24, 0x02	; 2
 200:	d9 f0       	breq	.+54     	; 0x238 <DIO_Set_DDR_PIN+0x50>
 202:	83 30       	cpi	r24, 0x03	; 3
 204:	29 f1       	breq	.+74     	; 0x250 <DIO_Set_DDR_PIN+0x68>
 206:	2f c0       	rjmp	.+94     	; 0x266 <DIO_Set_DDR_PIN+0x7e>
			case PORTA_REG:
				SetBit(DDRA, PIN);
 208:	9a b3       	in	r25, 0x1a	; 26
 20a:	21 e0       	ldi	r18, 0x01	; 1
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	06 2e       	mov	r0, r22
 210:	02 c0       	rjmp	.+4      	; 0x216 <DIO_Set_DDR_PIN+0x2e>
 212:	22 0f       	add	r18, r18
 214:	33 1f       	adc	r19, r19
 216:	0a 94       	dec	r0
 218:	e2 f7       	brpl	.-8      	; 0x212 <DIO_Set_DDR_PIN+0x2a>
 21a:	29 2b       	or	r18, r25
 21c:	2a bb       	out	0x1a, r18	; 26
				break;
 21e:	23 c0       	rjmp	.+70     	; 0x266 <DIO_Set_DDR_PIN+0x7e>
			case PORTB_REG:
				SetBit(DDRB, PIN);
 220:	97 b3       	in	r25, 0x17	; 23
 222:	21 e0       	ldi	r18, 0x01	; 1
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	06 2e       	mov	r0, r22
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_Set_DDR_PIN+0x46>
 22a:	22 0f       	add	r18, r18
 22c:	33 1f       	adc	r19, r19
 22e:	0a 94       	dec	r0
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_Set_DDR_PIN+0x42>
 232:	29 2b       	or	r18, r25
 234:	27 bb       	out	0x17, r18	; 23
				break;
 236:	17 c0       	rjmp	.+46     	; 0x266 <DIO_Set_DDR_PIN+0x7e>
			case PORTC_REG:
				SetBit(DDRC, PIN);
 238:	94 b3       	in	r25, 0x14	; 20
 23a:	21 e0       	ldi	r18, 0x01	; 1
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	06 2e       	mov	r0, r22
 240:	02 c0       	rjmp	.+4      	; 0x246 <DIO_Set_DDR_PIN+0x5e>
 242:	22 0f       	add	r18, r18
 244:	33 1f       	adc	r19, r19
 246:	0a 94       	dec	r0
 248:	e2 f7       	brpl	.-8      	; 0x242 <DIO_Set_DDR_PIN+0x5a>
 24a:	29 2b       	or	r18, r25
 24c:	24 bb       	out	0x14, r18	; 20
				break;
 24e:	0b c0       	rjmp	.+22     	; 0x266 <DIO_Set_DDR_PIN+0x7e>
			case PORTD_REG:
				SetBit(DDRD, PIN);
 250:	91 b3       	in	r25, 0x11	; 17
 252:	21 e0       	ldi	r18, 0x01	; 1
 254:	30 e0       	ldi	r19, 0x00	; 0
 256:	06 2e       	mov	r0, r22
 258:	02 c0       	rjmp	.+4      	; 0x25e <DIO_Set_DDR_PIN+0x76>
 25a:	22 0f       	add	r18, r18
 25c:	33 1f       	adc	r19, r19
 25e:	0a 94       	dec	r0
 260:	e2 f7       	brpl	.-8      	; 0x25a <DIO_Set_DDR_PIN+0x72>
 262:	29 2b       	or	r18, r25
 264:	21 bb       	out	0x11, r18	; 17
				break;
			}

		}
		if (DDR == INPUT) {
 266:	41 11       	cpse	r20, r1
 268:	37 c0       	rjmp	.+110    	; 0x2d8 <DIO_Set_DDR_PIN+0xf0>
			switch (PORT) {
 26a:	81 30       	cpi	r24, 0x01	; 1
 26c:	91 f0       	breq	.+36     	; 0x292 <DIO_Set_DDR_PIN+0xaa>
 26e:	28 f0       	brcs	.+10     	; 0x27a <DIO_Set_DDR_PIN+0x92>
 270:	82 30       	cpi	r24, 0x02	; 2
 272:	d9 f0       	breq	.+54     	; 0x2aa <DIO_Set_DDR_PIN+0xc2>
 274:	83 30       	cpi	r24, 0x03	; 3
 276:	29 f1       	breq	.+74     	; 0x2c2 <DIO_Set_DDR_PIN+0xda>
 278:	08 95       	ret
			case PORTA_REG:
				ClearBit(DDRA, PIN);
 27a:	2a b3       	in	r18, 0x1a	; 26
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	02 c0       	rjmp	.+4      	; 0x286 <DIO_Set_DDR_PIN+0x9e>
 282:	88 0f       	add	r24, r24
 284:	99 1f       	adc	r25, r25
 286:	6a 95       	dec	r22
 288:	e2 f7       	brpl	.-8      	; 0x282 <DIO_Set_DDR_PIN+0x9a>
 28a:	80 95       	com	r24
 28c:	82 23       	and	r24, r18
 28e:	8a bb       	out	0x1a, r24	; 26
				break;
 290:	08 95       	ret
			case PORTB_REG:
				ClearBit(DDRB, PIN);
 292:	27 b3       	in	r18, 0x17	; 23
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	02 c0       	rjmp	.+4      	; 0x29e <DIO_Set_DDR_PIN+0xb6>
 29a:	88 0f       	add	r24, r24
 29c:	99 1f       	adc	r25, r25
 29e:	6a 95       	dec	r22
 2a0:	e2 f7       	brpl	.-8      	; 0x29a <DIO_Set_DDR_PIN+0xb2>
 2a2:	80 95       	com	r24
 2a4:	82 23       	and	r24, r18
 2a6:	87 bb       	out	0x17, r24	; 23
				break;
 2a8:	08 95       	ret
			case PORTC_REG:
				ClearBit(DDRC, PIN);
 2aa:	24 b3       	in	r18, 0x14	; 20
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <DIO_Set_DDR_PIN+0xce>
 2b2:	88 0f       	add	r24, r24
 2b4:	99 1f       	adc	r25, r25
 2b6:	6a 95       	dec	r22
 2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <DIO_Set_DDR_PIN+0xca>
 2ba:	80 95       	com	r24
 2bc:	82 23       	and	r24, r18
 2be:	84 bb       	out	0x14, r24	; 20
				break;
 2c0:	08 95       	ret
			case PORTD_REG:
				ClearBit(DDRD, PIN);
 2c2:	21 b3       	in	r18, 0x11	; 17
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <DIO_Set_DDR_PIN+0xe6>
 2ca:	88 0f       	add	r24, r24
 2cc:	99 1f       	adc	r25, r25
 2ce:	6a 95       	dec	r22
 2d0:	e2 f7       	brpl	.-8      	; 0x2ca <DIO_Set_DDR_PIN+0xe2>
 2d2:	80 95       	com	r24
 2d4:	82 23       	and	r24, r18
 2d6:	81 bb       	out	0x11, r24	; 17
 2d8:	08 95       	ret

000002da <DIO_Set_PIN>:

		}
	}
}
void DIO_Set_PIN(DIO_PORT_ID PORT, DIO_PIN_ID PIN, DIO_Value value) {
	if (PORT <= PORTD_REG && PIN <= PIN7) {
 2da:	84 30       	cpi	r24, 0x04	; 4
 2dc:	08 f0       	brcs	.+2      	; 0x2e0 <DIO_Set_PIN+0x6>
 2de:	75 c0       	rjmp	.+234    	; 0x3ca <DIO_Set_PIN+0xf0>
 2e0:	68 30       	cpi	r22, 0x08	; 8
 2e2:	08 f0       	brcs	.+2      	; 0x2e6 <DIO_Set_PIN+0xc>
 2e4:	72 c0       	rjmp	.+228    	; 0x3ca <DIO_Set_PIN+0xf0>
		if (value == HIGH) {
 2e6:	41 30       	cpi	r20, 0x01	; 1
 2e8:	b9 f5       	brne	.+110    	; 0x358 <DIO_Set_PIN+0x7e>
			switch (PORT) {
 2ea:	81 30       	cpi	r24, 0x01	; 1
 2ec:	91 f0       	breq	.+36     	; 0x312 <DIO_Set_PIN+0x38>
 2ee:	28 f0       	brcs	.+10     	; 0x2fa <DIO_Set_PIN+0x20>
 2f0:	82 30       	cpi	r24, 0x02	; 2
 2f2:	d9 f0       	breq	.+54     	; 0x32a <DIO_Set_PIN+0x50>
 2f4:	83 30       	cpi	r24, 0x03	; 3
 2f6:	29 f1       	breq	.+74     	; 0x342 <DIO_Set_PIN+0x68>
 2f8:	2f c0       	rjmp	.+94     	; 0x358 <DIO_Set_PIN+0x7e>
			case PORTA_REG:
				SetBit(PORTA, PIN);
 2fa:	9b b3       	in	r25, 0x1b	; 27
 2fc:	21 e0       	ldi	r18, 0x01	; 1
 2fe:	30 e0       	ldi	r19, 0x00	; 0
 300:	06 2e       	mov	r0, r22
 302:	02 c0       	rjmp	.+4      	; 0x308 <DIO_Set_PIN+0x2e>
 304:	22 0f       	add	r18, r18
 306:	33 1f       	adc	r19, r19
 308:	0a 94       	dec	r0
 30a:	e2 f7       	brpl	.-8      	; 0x304 <DIO_Set_PIN+0x2a>
 30c:	29 2b       	or	r18, r25
 30e:	2b bb       	out	0x1b, r18	; 27
				break;
 310:	23 c0       	rjmp	.+70     	; 0x358 <DIO_Set_PIN+0x7e>
			case PORTB_REG:
				SetBit(PORTB, PIN);
 312:	98 b3       	in	r25, 0x18	; 24
 314:	21 e0       	ldi	r18, 0x01	; 1
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	06 2e       	mov	r0, r22
 31a:	02 c0       	rjmp	.+4      	; 0x320 <DIO_Set_PIN+0x46>
 31c:	22 0f       	add	r18, r18
 31e:	33 1f       	adc	r19, r19
 320:	0a 94       	dec	r0
 322:	e2 f7       	brpl	.-8      	; 0x31c <DIO_Set_PIN+0x42>
 324:	29 2b       	or	r18, r25
 326:	28 bb       	out	0x18, r18	; 24
				break;
 328:	17 c0       	rjmp	.+46     	; 0x358 <DIO_Set_PIN+0x7e>
			case PORTC_REG:
				SetBit(PORTC, PIN);
 32a:	95 b3       	in	r25, 0x15	; 21
 32c:	21 e0       	ldi	r18, 0x01	; 1
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	06 2e       	mov	r0, r22
 332:	02 c0       	rjmp	.+4      	; 0x338 <DIO_Set_PIN+0x5e>
 334:	22 0f       	add	r18, r18
 336:	33 1f       	adc	r19, r19
 338:	0a 94       	dec	r0
 33a:	e2 f7       	brpl	.-8      	; 0x334 <DIO_Set_PIN+0x5a>
 33c:	29 2b       	or	r18, r25
 33e:	25 bb       	out	0x15, r18	; 21
				break;
 340:	0b c0       	rjmp	.+22     	; 0x358 <DIO_Set_PIN+0x7e>
			case PORTD_REG:
				SetBit(PORTD, PIN);
 342:	92 b3       	in	r25, 0x12	; 18
 344:	21 e0       	ldi	r18, 0x01	; 1
 346:	30 e0       	ldi	r19, 0x00	; 0
 348:	06 2e       	mov	r0, r22
 34a:	02 c0       	rjmp	.+4      	; 0x350 <DIO_Set_PIN+0x76>
 34c:	22 0f       	add	r18, r18
 34e:	33 1f       	adc	r19, r19
 350:	0a 94       	dec	r0
 352:	e2 f7       	brpl	.-8      	; 0x34c <DIO_Set_PIN+0x72>
 354:	29 2b       	or	r18, r25
 356:	22 bb       	out	0x12, r18	; 18
				break;
			}

		}
		if (value == LOW) {
 358:	41 11       	cpse	r20, r1
 35a:	37 c0       	rjmp	.+110    	; 0x3ca <DIO_Set_PIN+0xf0>
			switch (PORT) {
 35c:	81 30       	cpi	r24, 0x01	; 1
 35e:	91 f0       	breq	.+36     	; 0x384 <DIO_Set_PIN+0xaa>
 360:	28 f0       	brcs	.+10     	; 0x36c <DIO_Set_PIN+0x92>
 362:	82 30       	cpi	r24, 0x02	; 2
 364:	d9 f0       	breq	.+54     	; 0x39c <DIO_Set_PIN+0xc2>
 366:	83 30       	cpi	r24, 0x03	; 3
 368:	29 f1       	breq	.+74     	; 0x3b4 <DIO_Set_PIN+0xda>
 36a:	08 95       	ret
			case PORTA_REG:
				ClearBit(PORTA, PIN);
 36c:	2b b3       	in	r18, 0x1b	; 27
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	02 c0       	rjmp	.+4      	; 0x378 <DIO_Set_PIN+0x9e>
 374:	88 0f       	add	r24, r24
 376:	99 1f       	adc	r25, r25
 378:	6a 95       	dec	r22
 37a:	e2 f7       	brpl	.-8      	; 0x374 <DIO_Set_PIN+0x9a>
 37c:	80 95       	com	r24
 37e:	82 23       	and	r24, r18
 380:	8b bb       	out	0x1b, r24	; 27
				break;
 382:	08 95       	ret
			case PORTB_REG:
				ClearBit(PORTB, PIN);
 384:	28 b3       	in	r18, 0x18	; 24
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	02 c0       	rjmp	.+4      	; 0x390 <DIO_Set_PIN+0xb6>
 38c:	88 0f       	add	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	6a 95       	dec	r22
 392:	e2 f7       	brpl	.-8      	; 0x38c <DIO_Set_PIN+0xb2>
 394:	80 95       	com	r24
 396:	82 23       	and	r24, r18
 398:	88 bb       	out	0x18, r24	; 24
				break;
 39a:	08 95       	ret
			case PORTC_REG:
				ClearBit(PORTC, PIN);
 39c:	25 b3       	in	r18, 0x15	; 21
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	02 c0       	rjmp	.+4      	; 0x3a8 <DIO_Set_PIN+0xce>
 3a4:	88 0f       	add	r24, r24
 3a6:	99 1f       	adc	r25, r25
 3a8:	6a 95       	dec	r22
 3aa:	e2 f7       	brpl	.-8      	; 0x3a4 <DIO_Set_PIN+0xca>
 3ac:	80 95       	com	r24
 3ae:	82 23       	and	r24, r18
 3b0:	85 bb       	out	0x15, r24	; 21
				break;
 3b2:	08 95       	ret
			case PORTD_REG:
				ClearBit(PORTD, PIN);
 3b4:	22 b3       	in	r18, 0x12	; 18
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <DIO_Set_PIN+0xe6>
 3bc:	88 0f       	add	r24, r24
 3be:	99 1f       	adc	r25, r25
 3c0:	6a 95       	dec	r22
 3c2:	e2 f7       	brpl	.-8      	; 0x3bc <DIO_Set_PIN+0xe2>
 3c4:	80 95       	com	r24
 3c6:	82 23       	and	r24, r18
 3c8:	82 bb       	out	0x12, r24	; 18
 3ca:	08 95       	ret

000003cc <GI_ENABLE>:
	SetBit(SREG,GI_ENABLE_Pin);
}

void GI_DISABLE(void){
	
	ClearBit(SREG,GI_ENABLE_Pin);
 3cc:	8f b7       	in	r24, 0x3f	; 63
 3ce:	80 68       	ori	r24, 0x80	; 128
 3d0:	8f bf       	out	0x3f, r24	; 63
 3d2:	08 95       	ret

000003d4 <EXT0_ENABLE>:
}

void EXT0_ENABLE(void){
	// enable General Interrupt
	GI_ENABLE();
 3d4:	0e 94 e6 01 	call	0x3cc	; 0x3cc <GI_ENABLE>
	// enable INT0
	SetBit(GICR,GICR_INT0);
 3d8:	8b b7       	in	r24, 0x3b	; 59
 3da:	80 64       	ori	r24, 0x40	; 64
 3dc:	8b bf       	out	0x3b, r24	; 59
	// Set Mode 
	#if (INT0_Mode == Low_Level)
		ClearBit(MCUCR,MCUCR_ISC00);
		ClearBit(MCUCR,MCUCR_ISC01);
	#elif (INT0_Mode == Logical_change)
		SetBit(MCUCR,MCUCR_ISC00);
 3de:	85 b7       	in	r24, 0x35	; 53
 3e0:	81 60       	ori	r24, 0x01	; 1
 3e2:	85 bf       	out	0x35, r24	; 53
		ClearBit(MCUCR,MCUCR_ISC01);
 3e4:	85 b7       	in	r24, 0x35	; 53
 3e6:	8d 7f       	andi	r24, 0xFD	; 253
 3e8:	85 bf       	out	0x35, r24	; 53
 3ea:	08 95       	ret

000003ec <EXT1_ENABLE>:
	#endif
}

void EXT1_ENABLE(void){
	// enable General Interrupt
	GI_ENABLE();
 3ec:	0e 94 e6 01 	call	0x3cc	; 0x3cc <GI_ENABLE>
	// enable INT1
	SetBit(GICR,GICR_INT1);
 3f0:	8b b7       	in	r24, 0x3b	; 59
 3f2:	80 68       	ori	r24, 0x80	; 128
 3f4:	8b bf       	out	0x3b, r24	; 59
	ClearBit(MCUCR,MCUCR_ISC11);
	#elif (INT1_Mode == Falling_edge)
	ClearBit(MCUCR,MCUCR_ISC10);
	SetBit(MCUCR,MCUCR_ISC11);
	#elif (INT1_Mode == Rising_edge)
	SetBit(MCUCR,MCUCR_ISC10);
 3f6:	85 b7       	in	r24, 0x35	; 53
 3f8:	84 60       	ori	r24, 0x04	; 4
 3fa:	85 bf       	out	0x35, r24	; 53
	SetBit(MCUCR,MCUCR_ISC11);
 3fc:	85 b7       	in	r24, 0x35	; 53
 3fe:	88 60       	ori	r24, 0x08	; 8
 400:	85 bf       	out	0x35, r24	; 53
 402:	08 95       	ret

00000404 <EXT2_ENABLE>:
	#endif
}

void EXT2_ENABLE(void){
	// enable General Interrupt
	GI_ENABLE();
 404:	0e 94 e6 01 	call	0x3cc	; 0x3cc <GI_ENABLE>
	// enable INT1
	SetBit(GICR,GICR_INT2);
 408:	8b b7       	in	r24, 0x3b	; 59
 40a:	80 62       	ori	r24, 0x20	; 32
 40c:	8b bf       	out	0x3b, r24	; 59
	
	// Set Mode
	#if (INT2_Mode == Falling_edge)
	ClearBit(MCUCSR,MCUCSR_ISC2);
 40e:	84 b7       	in	r24, 0x34	; 52
 410:	8f 7b       	andi	r24, 0xBF	; 191
 412:	84 bf       	out	0x34, r24	; 52
 414:	08 95       	ret

00000416 <EXT_INT_INIT>:
	SetBit(MCUCSR,MCUCSR_ISC2);
	#endif
}

void EXT_INT_INIT(void){
	GI_ENABLE();
 416:	0e 94 e6 01 	call	0x3cc	; 0x3cc <GI_ENABLE>
	if (INT0_Status == Enable)
	{
		EXT0_ENABLE();
 41a:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <EXT0_ENABLE>
	}
	if (INT1_Status == Enable)
	{
		EXT1_ENABLE();
 41e:	0e 94 f6 01 	call	0x3ec	; 0x3ec <EXT1_ENABLE>
	}
	if (INT2_Status == Enable)
	{
		EXT2_ENABLE();
 422:	0e 94 02 02 	call	0x404	; 0x404 <EXT2_ENABLE>
 426:	08 95       	ret

00000428 <INT0_SetCallBack>:
	}
	
}

void INT0_SetCallBack(void (*pfunc)(void)){
	Gpfunc0 = pfunc;
 428:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <Gpfunc0+0x1>
 42c:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <Gpfunc0>
 430:	08 95       	ret

00000432 <INT1_SetCallBack>:
}

void INT1_SetCallBack(void (*pfunc)(void)){
	Gpfunc1 = pfunc;
 432:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <Gpfunc1+0x1>
 436:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <Gpfunc1>
 43a:	08 95       	ret

0000043c <INT2_SetCallBack>:
}

void INT2_SetCallBack(void (*pfunc)(void)){
	Gpfunc2 = pfunc;
 43c:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 440:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 444:	08 95       	ret

00000446 <__vector_1>:
}

ISR(SRC_INT0){
 446:	1f 92       	push	r1
 448:	0f 92       	push	r0
 44a:	0f b6       	in	r0, 0x3f	; 63
 44c:	0f 92       	push	r0
 44e:	11 24       	eor	r1, r1
 450:	2f 93       	push	r18
 452:	3f 93       	push	r19
 454:	4f 93       	push	r20
 456:	5f 93       	push	r21
 458:	6f 93       	push	r22
 45a:	7f 93       	push	r23
 45c:	8f 93       	push	r24
 45e:	9f 93       	push	r25
 460:	af 93       	push	r26
 462:	bf 93       	push	r27
 464:	ef 93       	push	r30
 466:	ff 93       	push	r31
	if (Gpfunc0 != NULL)
 468:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <Gpfunc0>
 46c:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <Gpfunc0+0x1>
 470:	30 97       	sbiw	r30, 0x00	; 0
 472:	09 f0       	breq	.+2      	; 0x476 <__vector_1+0x30>
	{
		Gpfunc0();
 474:	09 95       	icall
	}
}
 476:	ff 91       	pop	r31
 478:	ef 91       	pop	r30
 47a:	bf 91       	pop	r27
 47c:	af 91       	pop	r26
 47e:	9f 91       	pop	r25
 480:	8f 91       	pop	r24
 482:	7f 91       	pop	r23
 484:	6f 91       	pop	r22
 486:	5f 91       	pop	r21
 488:	4f 91       	pop	r20
 48a:	3f 91       	pop	r19
 48c:	2f 91       	pop	r18
 48e:	0f 90       	pop	r0
 490:	0f be       	out	0x3f, r0	; 63
 492:	0f 90       	pop	r0
 494:	1f 90       	pop	r1
 496:	18 95       	reti

00000498 <__vector_2>:

ISR(SRC_INT1){
 498:	1f 92       	push	r1
 49a:	0f 92       	push	r0
 49c:	0f b6       	in	r0, 0x3f	; 63
 49e:	0f 92       	push	r0
 4a0:	11 24       	eor	r1, r1
 4a2:	2f 93       	push	r18
 4a4:	3f 93       	push	r19
 4a6:	4f 93       	push	r20
 4a8:	5f 93       	push	r21
 4aa:	6f 93       	push	r22
 4ac:	7f 93       	push	r23
 4ae:	8f 93       	push	r24
 4b0:	9f 93       	push	r25
 4b2:	af 93       	push	r26
 4b4:	bf 93       	push	r27
 4b6:	ef 93       	push	r30
 4b8:	ff 93       	push	r31
	if (Gpfunc1 != NULL)
 4ba:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <Gpfunc1>
 4be:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <Gpfunc1+0x1>
 4c2:	30 97       	sbiw	r30, 0x00	; 0
 4c4:	09 f0       	breq	.+2      	; 0x4c8 <__vector_2+0x30>
	{
		Gpfunc1();
 4c6:	09 95       	icall
	}
}
 4c8:	ff 91       	pop	r31
 4ca:	ef 91       	pop	r30
 4cc:	bf 91       	pop	r27
 4ce:	af 91       	pop	r26
 4d0:	9f 91       	pop	r25
 4d2:	8f 91       	pop	r24
 4d4:	7f 91       	pop	r23
 4d6:	6f 91       	pop	r22
 4d8:	5f 91       	pop	r21
 4da:	4f 91       	pop	r20
 4dc:	3f 91       	pop	r19
 4de:	2f 91       	pop	r18
 4e0:	0f 90       	pop	r0
 4e2:	0f be       	out	0x3f, r0	; 63
 4e4:	0f 90       	pop	r0
 4e6:	1f 90       	pop	r1
 4e8:	18 95       	reti

000004ea <__vector_3>:
ISR(SRC_INT2){
 4ea:	1f 92       	push	r1
 4ec:	0f 92       	push	r0
 4ee:	0f b6       	in	r0, 0x3f	; 63
 4f0:	0f 92       	push	r0
 4f2:	11 24       	eor	r1, r1
 4f4:	2f 93       	push	r18
 4f6:	3f 93       	push	r19
 4f8:	4f 93       	push	r20
 4fa:	5f 93       	push	r21
 4fc:	6f 93       	push	r22
 4fe:	7f 93       	push	r23
 500:	8f 93       	push	r24
 502:	9f 93       	push	r25
 504:	af 93       	push	r26
 506:	bf 93       	push	r27
 508:	ef 93       	push	r30
 50a:	ff 93       	push	r31
	if (Gpfunc2 != NULL)
 50c:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 510:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 514:	30 97       	sbiw	r30, 0x00	; 0
 516:	09 f0       	breq	.+2      	; 0x51a <__vector_3+0x30>
	{
		Gpfunc2();
 518:	09 95       	icall
	}
 51a:	ff 91       	pop	r31
 51c:	ef 91       	pop	r30
 51e:	bf 91       	pop	r27
 520:	af 91       	pop	r26
 522:	9f 91       	pop	r25
 524:	8f 91       	pop	r24
 526:	7f 91       	pop	r23
 528:	6f 91       	pop	r22
 52a:	5f 91       	pop	r21
 52c:	4f 91       	pop	r20
 52e:	3f 91       	pop	r19
 530:	2f 91       	pop	r18
 532:	0f 90       	pop	r0
 534:	0f be       	out	0x3f, r0	; 63
 536:	0f 90       	pop	r0
 538:	1f 90       	pop	r1
 53a:	18 95       	reti

0000053c <_exit>:
 53c:	f8 94       	cli

0000053e <__stop_program>:
 53e:	ff cf       	rjmp	.-2      	; 0x53e <__stop_program>
